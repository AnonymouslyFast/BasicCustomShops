plugins {
    id 'java'
    id 'com.gradleup.shadow' version '8.3.3'
    id 'xyz.jpenilla.run-paper' version '2.3.1'
}

group = 'com.anonymouslyfast'
version = '2.1'

repositories {
    mavenCentral()
    maven { url = "https://repo.codemc.org/repository/maven-public/" }
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven { url 'https://jitpack.io' }
}

dependencies {
    compileOnly 'org.spigotmc:spigot-api:1.21.4-R0.1-SNAPSHOT'

    implementation 'dev.jorel:commandapi-bukkit-shade:10.1.0'
    compileOnly 'dev.jorel:commandapi-annotations:10.1.0'
    annotationProcessor 'dev.jorel:commandapi-annotations:10.1.0'

    compileOnly 'com.github.MilkBowl:VaultAPI:1.7'
}

// Use Java 21
def targetJavaVersion = 21

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

tasks.withType(ShadowJar).configureEach {
    relocate 'dev.jorel.commandapi', 'com.anonymouslyfast.basicCustomShop.commandapi'
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset = 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

tasks {
    build {
        dependsOn(ShadowJar)
    }

    runServer {
        // Downloading Vault, and Essentials, Vault is required, and Essentials sets up the economy.
        downloadPlugins {
            url("https://dev.bukkit.org/projects/vault/files/latest")
            url("https://ci.ender.zone/job/EssentialsX/lastSuccessfulBuild/artifact/jars/EssentialsX-2.21.2-dev+30-73da278.jar")
        }
        minecraftVersion("1.21")
    }
}

tasks.register("buildPlugin", ShadowJar) {
    archiveClassifier.set('')
    from sourceSets.main.output
    configurations = [project.configurations.runtimeClasspath]
}
